v =matrix(c(1,2,3),nrow=3,ncol = 1)
v
w =matrix(c(4,5,6),nrow = 3,ncol = 1)
w
scalar=t(v)%*%w
scalar
m= matrix(c(1,4,3,2),nrow = 2,ncol = 2,byrow = T)
m
n=matrix(c(5,3,1,7),nrow = 2,ncol = 2,byrow = T)
n
sum=M+N
sum =m+n
sum
V=matrix(c(-4,1,7),nrow = 3,ncol = 1)
v
V
V=matrix(c(-4,1,7),nrow = 3,ncol = 1)
> v
v= matrix(c(-4,1,7),nrow = 3,ncol = 1)
w=matrix(c(0,4,20),nrow = 3,ncol = 1)
scalar= t(v)%*%w
scalar
b=-3*w
b
m=matrix(c(8,3,0,21,42,3,0,34,11),nrow = 3,ncol = 3)
m
m=matrix(c(8,21,0,3,42,34,0,3,11),nrow = 3,ncol = 3)
m
m=matrix(c(8,21,0,3,42,34,0,3,11),nrow = 3,ncol = 3)
M=matrix(c(8,21,0,3,42,34,0,3,11),nrow = 3,ncol = 3)
N=matrix(c(-6,0,5,-3,2,1,0,7,-8),nrow = 3,ncol = 3)
N
N=matrix(c(-6,0,5,-3,2,1,0,7,-8),nrow = 3,ncol = 3,byrow = T)
N
N=matrix(c(-6,-3,0,0,2,7,5,1,-8),nrow = 3,ncol = 3,byrow = T)
N
M=matrix(c(8,3,0,21,42,3,0,34,11),nrow = 3,ncol = 3,byrow = T)
M
c=M*V
c=M*v
v= matrix(c(-4,1,7),nrow = 3,ncol = 1)
v
v= matrix(c(-4,1,7),nrow = 3,ncol = 1)
w= matrix(c(0,4,20),nrow = 3,ncol = 1)
w
w= matrix(c(0,4,20),nrow = 3,ncol = 1)
v= matrix(c(-4,1,7),nrow = 3,ncol = 1)
scalar=t(v)%*%w
scalar
ans_b=-3*w
ans_b
M= matrix(c(8,21,0,3,42,34,0,3,11),nrow = 3,ncol = 3,byrow = T)
M
M= matrix(c(8,3,0,21,42,3,0,34,11),nrow = 3,ncol = 3,byrow = T)
M
ans_c=M%*%v
ans_c
N= matrix(c(-6,-3,0,02,7,5,1,-8),nrow = 3,ncol = 3,byrow = T)
N= matrix(c(-6,-3,0,0,2,7,5,1,-8),nrow = 3,ncol = 3,byrow = T)
N
ans_d=M+N
ans_d
ans_e=M-N
ans_e
N= matrix(c(1,-1,1,6,1,-2,1,0),nrow = 4,ncol = 2,byrow = T)
Z= matrix(c(1,-1,1,6,1,-2,1,0),nrow = 4,ncol = 2,byrow = T)
Z
ans_f=t(Z)%*%Z
ans_f
Y= matrix(c(0,9,0,1),nrow = 4,ncol = 1,byrow = T)
ans_h=t(z)%*%y
ans_h=t(Z)%*%Y
ans_h
ans_j=det(ans_f)
ans_j
Y= matrix(c(0,9,0,1),nrow = 4,ncol = 1,byrow = T)
Y
setwd("C:/Users/bhala/Downloads")
library(Hmisc) #Describe Function
library(psych) #Multiple Functions for Statistics and Multivariate Analysis
library(GGally) #ggpairs Function
library(ggplot2) #ggplot2 Functions
library(vioplot) #Violin Plot Function
library(corrplot) #Plot Correlations
library(DescTools) #VIF Function
library(leaps) #Best Set Linear Regression Functions
#set a dataset form file
setwd("C:/Users/bhala/Downloads")
training_values <- read.csv(file="employee1.csv", header=TRUE, sep=",")
#look a size of dataset by row and col
dim(training_values)
# look a data is  a num or category
str(training_values)
names(training_values)
head(training_values)
sum(is.na(training_values))
training_dataset <- na.omit(training_values)
sum(is.na(training_dataset))
library(psych)
training_dataset2 <- training_dataset[,c(2,4:7,9,10)]
str(training_dataset2)
head(training_dataset2)
library(psych)
training_dataset2 <- training_dataset[,c(2,4:7,9,11)]
str(training_dataset2)
head(training_dataset2)
library(corrplot) #Plot Correlations
library(ggplot2)
training_cor<-cor(training_dataset2, method="spearman")
training_cor
corrplot(training_cor, method = "circle")
model1 <- lm( expenses~ ., data=training_dataset2)
model1
model1 <- lm( avg_monthly_hrs ~ ., data=training_dataset2)
model1
library(DescTools)
VIF(model1)
model1 <- lm(satisfaction ~ ., data=training_dataset2)
model1
library(DescTools)
VIF(model1)
training_dataset2 <- training_dataset[,c(2,4:7,9,11)]
str(training_dataset2)
str(training_values)
training_cor<-cor(training_dataset, method="spearman")
training_cor
corrplot(training_cor, method = "circle")
model1 <- lm(satisfaction ~ ., data=training_dataset)
model1
library(DescTools)
VIF(model1)
setwd("C:/Users/bhala/Downloads")
training_values <- read.csv(file="employee1.csv", header=TRUE, sep=",")
#look a size of dataset by row and col
dim(training_values)
# look a data is  a num or category
str(training_values)
# Show names of the variables in datasets
names(training_values)
# looking a datasets table /Show for first 6 rows of data
head(training_values)
# Check for Missing Values
sum(is.na(training_values))
#Listwise Deletion
training_dataset <- na.omit(training_values)
sum(is.na(training_dataset))
#Create new subsets of data
library(corrplot) #Plot Correlations
library(ggplot2)
#library(dplyr)
#Check for Multicollinearity with Correlations
training_cor<-cor(training_dataset, method="spearman")
training_cor
corrplot(training_cor, method = "circle")
model1 <- lm(satisfaction ~ ., data=training_dataset)
model1
library(DescTools)
VIF(model1)
model1 <- lm(satisfaction ~ ., data=training_dataset)
model1
library(DescTools)
VIF(model1)
training_dataset <- na.omit(training_values)
sum(is.na(training_dataset))
training_cor<-cor(training_dataset, method="spearman")
training_cor
corrplot(training_cor, method = "circle")
model1 <- lm(satisfaction ~ ., data=training_dataset)
model1
training_cor<-cor(training_dataset, method="spearman")
training_cor
corrplot(training_cor, method = "circle")
model1 <- lm(satisfaction ~ ., data=training_dataset)
model1
library(Hmisc) #Describe Function
library(psych) #Multiple Functions for Statistics and Multivariate Analysis
library(GGally) #ggpairs Function
library(ggplot2) #ggplot2 Functions
library(vioplot) #Violin Plot Function
library(corrplot) #Plot Correlations
library(DescTools) #VIF Function
library(leaps) #Best Set Linear Regression Functions
#set a dataset form file
setwd("C:/Users/bhala/Downloads")
training_values <- read.csv(file="employee1.csv", header=TRUE, sep=",")
#look a size of dataset by row and col
dim(training_values)
str(training_values)
names(training_values)
head(training_values)
sum(is.na(training_values))
training_dataset <- na.omit(training_values)
sum(is.na(training_dataset))
library(corrplot) #Plot Correlations
library(ggplot2)
training_cor<-cor(training_dataset, method="spearman")
training_cor
corrplot(training_cor, method = "circle")
model1 <- lm(satisfaction ~ ., data=training_dataset)
model1
library(DescTools)
VIF(model1)
library(corrplot) #Plot Correlations
library(ggplot2)
setwd("~/dsc-323")
setwd("~/Dsc-324")
setwd("~/Dsc-324")
training_values <- read.csv(file="employee1.csv", header=TRUE, sep=",")
#look a size of dataset by row and col
dim(training_values)
# look a data is  a num or category
str(training_values)
names(training_values)
# looking a datasets table /Show for first 6 rows of data
head(training_values)
# Check for Missing Values
sum(is.na(training_values))
ibrary(Hmisc) #Describe Function
library(psych) #Multiple Functions for Statistics and Multivariate Analysis
library(GGally) #ggpairs Function
library(ggplot2) #ggplot2 Functions
library(vioplot) #Violin Plot Function
library(corrplot) #Plot Correlations
library(DescTools) #VIF Function
library(leaps) #Best Set Linear Regression Functions
install.packages(c("cli", "haven", "knitr", "later"))
library(Hmisc) #Describe Function
library(psych) #Multiple Functions for Statistics and Multivariate Analysis
library(GGally) #ggpairs Function
library(ggplot2) #ggplot2 Functions
library(vioplot) #Violin Plot Function
library(corrplot) #Plot Correlations
library(DescTools) #VIF Function
library(leaps) #Best Set Linear Regression Functions
setwd("~/Dsc-324")
training_values <- read.csv(file="employee1.csv", header=TRUE, sep=",")
#look a size of dataset by row and col
dim(training_values)
# look a data is  a num or category
str(training_values)
# Show names of the variables in datasets
names(training_values)
# looking a datasets table /Show for first 6 rows of data
head(training_values)
# Check for Missing Values
sum(is.na(training_values))
training_dataset <- na.omit(training_values)
sum(is.na(training_dataset1))
training_dataset1 <- na.omit(training_values)
sum(is.na(training_dataset1))
library(psych)
library(corrplot) #Plot Correlations
library(ggplot2)
training_cor<-cor(training_dataset1, method="spearman")
training_cor
corrplot(training_cor, method = "circle")
model1 <- lm( satisfaction~ ., data=training_dataset1)
model1
library(DescTools)
VIF(model1)
training_dataset2 <- training_dataset1[,c(2:11)]
str(training_dataset2)
head(training_dataset2)
library(corrplot) #Plot Correlations
library(ggplot2)
#library(dplyr)
#Check for Multicollinearity with Correlations
training_cor<-cor(training_dataset2, method="spearman")
training_cor
corrplot(training_cor, method = "circle")
model1 <- lm( satisfaction ~ ., data=training_dataset2)
model1
library(DescTools)
VIF(model1)
VIF(model1)
library(Hmisc) #Describe Function
library(psych) #Multiple Functions for Statistics and Multivariate Analysis
library(GGally) #ggpairs Function
library(ggplot2) #ggplot2 Functions
library(vioplot) #Violin Plot Function
library(corrplot) #Plot Correlations
library(DescTools) #VIF Function
library(leaps) #Best Set Linear Regression Functions
#set a dataset form file
setwd("~/Dsc-324")
training_values <- read.csv(file="insurance_dataset.csv", header=TRUE, sep=",")
#look a size of dataset by row and col
dim(training_values)
# look a data is  a num or category
str(training_values)
# Show names of the variables in datasets
names(training_values)
# looking a datasets table /Show for first 6 rows of data
head(training_values)
# Check for Missing Values
sum(is.na(training_values))
#Create new subsets of data
library(psych)
training_dataset2 <- training_values[,c(1,3:5,7,9,10)]
str(training_dataset2)
head(training_dataset2)
library(corrplot) #Plot Correlations
library(ggplot2)
#library(dplyr)
#Check for Multicollinearity with Correlations
training_cor<-cor(training_dataset2, method="spearman")
training_cor
corrplot(training_cor, method = "circle")
model1 <- lm( expenses~ ., data=training_dataset2)
model1
library(DescTools)
VIF(model1)
#Creating Automatic Models
library(leaps)
null = lm( expenses~ 1, data=training_dataset2)
null
full = lm(expenses ~ ., data=training_dataset2)
full
#Forward Regression
train_Forward = step(null, scope = list(lower=null, upper=full), direction="forward")
summary(train_Forward)
#Backward Regression
train_Backward = step(full, direction="backward")
summary(train_Backward)
#Stepwise Regression
train_Step = step(null, scope = list(upper=full), direction="both")
summary(train_Step)
#Boxplots
boxplot(training_dataset2$expenses, col = "blue", main="expenses",
ylab="expenses" )
summary(training_dataset2$expenses)
#GG Boxplot
ggboxplot<-ggplot(training_dataset2, aes(y=expenses)) +
geom_boxplot(col="blue") +
labs(
title="expenses",
y="expenses(100K)")
ggboxplot
library(Hmisc) #Describe Function
library(psych) #Multiple Functions for Statistics and Multivariate Analysis
library(GGally) #ggpairs Function
library(ggplot2) #ggplot2 Functions
library(vioplot) #Violin Plot Function
library(corrplot) #Plot Correlations
library(DescTools) #VIF Function
library(leaps) #Best Set Linear Regression Functions
#set a dataset form file
setwd("~/Dsc-324")
training_values <- read.csv(file="insurance_dataset.csv", header=TRUE, sep=",")
#look a size of dataset by row and col
dim(training_values)
# look a data is  a num or category
str(training_values)
# Show names of the variables in datasets
names(training_values)
# looking a datasets table /Show for first 6 rows of data
head(training_values)
# Check for Missing Values
sum(is.na(training_values))
#Create new subsets of data
library(psych)
training_cor<-cor(training_dataset2, method="spearman")
training_cor
corrplot(training_cor, method = "circle")
model1 <- lm(satisfaction ~ ., data=training_dataset2)
model1
library(DescTools)
VIF(model1)
