NIKHIL BHALALA
CSC352
FINAL 


----------------------------------A-------------------------------
ONLY ANSWER OF THE GIVEN QUESTION 
 1) (d)	Trigger may not be defined in a PL/SQL anonymous block

 2) (d)	 In the dynamic SQL, the placeholders must be declared in the declaration section, 

 3) c)	In current version, two record variables can be compared if they are same with a record level operation, such as “ IF record_variable1 = record_ variable2 THEN ... ”.
 
 4) (b)	Record

 5) a)	Programmer may create two standalone functions with the same name to achieve the overloading feature. 





--------------------------------------------B----------------------
-----Q1)
DECLARE
 
    number_of_employees NUMBER;
    
    
    count_query VARCHAR2(340) := 'SELECT count(*) FROM employees WHERE salary <= :mini_sal ';
BEGIN

    
    EXECUTE IMMEDIATE count_query INTO number_of_employees USING 2400 ;
    
    -- print result
    dbms_output.put_line(' Number Of Employees  : ' || number_of_employees);
    
END;
/
OUTPUT
-------------------------------------------------------------------
Number Of Employees  : 5
-------------------------------------------------------------------
-------------------------------------------------------------------



--Q2)

CREATE or REPLACE PROCEDURE 
 Emp_info( Emp_ID number, l_name  OUT  employees.last_name%type ,  sal  out number, managerId out number)
    IS
BEGIN
       SELECT  Last_name ,salary , manager_id
       INTO      l_name ,   sal  , managerId
       FROM 	employees 
       where employee_ID = emp_ID;
     
end emp_info;
/
DECLARE
--emp_id_E employees.employee_id%type;
 e_lastname  employees.last_name%type ;
 e_sal number (8, 2) ; 
 e_mangerid  number;


--Emp_Bonus number;
   Cursor C IS SELECT employee_id from employees where salary >=2450;
   c1 c%rowtype;
BEGIN
for indx in c loop
 Emp_info( indx.employee_id,  e_lastname, e_sal, e_mangerid );

 DBMS_OUTPUT.PUT_LINE ( RPAD (indx.employee_id, 12)  ||'        '||  e_lastname ||'       '
 ||      To_char (e_sal, '$99,999') || '        '|| e_mangerid );
 end loop;
 end;
/
ROLLBACK;
OUTPUT
-------------------------------------------------------------------
100                 King        $24,000        
101                 Kochhar        $17,000        100
102                 De Haan        $17,000        100
103                 Hunold         $9,000        102
104                 Ernst         $6,000        103
105                 Austin         $4,800        103
106                 Pataballa         $4,800        103
107                 Lorentz         $4,200        103
108                 Greenberg        $12,000        101
109                 Faviet         $9,000        108
110                 Chen         $8,200        108
111                 Sciarra         $7,700        108
112                 Urman         $7,800        108
113                 Popp         $6,900        108
114                 Raphaely        $11,000        100
115                 Khoo         $3,100        114
116                 Baida         $2,900        114
117                 Tobias         $2,800        114
118                 Himuro         $2,600        114
119                 Colmenares         $2,500        114
120                 Weiss         $8,000        100
121                 Fripp         $8,200        100
122                 Kaufling         $7,900        100
123                 Vollman         $6,500        100
124                 Mourgos         $5,800        100
125                 Nayer         $3,200        120
126                 Mikkilineni         $2,700        120
129                 Bissot         $3,300        121
130                 Atkinson         $2,800        121
131                 Marlow         $2,500        121
133                 Mallin         $3,300        122
134                 Rogers         $2,900        122
137                 Ladwig         $3,600        123
138                 Stiles         $3,200        123
139                 Seo         $2,700        123
140                 Patel         $2,500        123
141                 Rajs         $3,500        124
142                 Davies         $3,100        124
143                 Matos         $2,600        124
144                 Vargas         $2,500        124
145                 Russell        $14,000        100
146                 Partners        $13,500        100
147                 Errazuriz        $12,000        100
148                 Cambrault        $11,000        100
149                 Zlotkey        $10,500        100
150                 Tucker        $10,000        145
151                 Bernstein         $9,500        145
152                 Hall         $9,000        145
153                 Olsen         $8,000        145
154                 Cambrault         $7,500        145
155                 Tuvault         $7,000        145
156                 King        $10,000        146
157                 Sully         $9,500        146
158                 McEwen         $9,000        146
159                 Smith         $8,000        146
160                 Doran         $7,500        146
161                 Sewall         $7,000        146
162                 Vishney        $10,500        147
163                 Greene         $9,500        147
164                 Marvins         $7,200        147
165                 Lee         $6,800        147
166                 Ande         $6,400        147
167                 Banda         $6,200        147
168                 Ozer        $11,500        148
169                 Bloom        $10,000        148
170                 Fox         $9,600        148
171                 Smith         $7,400        148
172                 Bates         $7,300        148
173                 Kumar         $6,100        148
174                 Abel        $11,000        149
175                 Hutton         $8,800        149
176                 Taylor         $8,600        149
177                 Livingston         $8,400        149
178                 Grant         $7,000        149
179                 Johnson         $6,200        149
180                 Taylor         $3,200        120
181                 Fleaur         $3,100        120
182                 Sullivan         $2,500        120
183                 Geoni         $2,800        120
184                 Sarchand         $4,200        121
185                 Bull         $4,100        121
186                 Dellinger         $3,400        121
187                 Cabrio         $3,000        121
188                 Chung         $3,800        122
189                 Dilly         $3,600        122
190                 Gates         $2,900        122
191                 Perkins         $2,500        122
192                 Bell         $4,000        123
193                 Everett         $3,900        123
194                 McCain         $3,200        123
195                 Jones         $2,800        123
196                 Walsh         $3,100        124
197                 Feeney         $3,000        124
198                 OConnell         $2,600        124
199                 Grant         $2,600        124
200                 Whalen         $4,400        101
201                 Hartstein        $13,000        100
202                 Fay         $6,000        201
203                 Mavris         $6,500        101
204                 Baer        $10,000        101
205                 Higgins        $12,000        101
206                 Gietz         $8,300        205

-------------------------------------------------------------------
-------------------------------------------------------------------



----Q3)
DECLARE
type Emp_Info is RECORD
(
 emp_id number(6),
 fullname VARCHAR2(46),
 sal number(8,2),
 deptid number
 
);
v     Emp_info  ;
d_id   number (6) := 60;
Cursor C IS

   SELECT employee_id from employees where department_id =d_id  ;
function  Get_Emp_Info( emp_id number)
return Emp_info
is 
--emp_id number(6);
 fullname VARCHAR2(46);
 sal number(8,2);
 deptid number;
vei Emp_info;
BEGIN
select  employee_ID , (first_name ||' '|| last_name) as fullname,  salary ,department_id 
into
 vei. emp_id , vei.fullname , vei.sal ,vei.deptid  from  	employees 
where  employee_ID = emp_ID;
return vei;
end Get_Emp_Info;
BEGIN
For indx in C LOOP
      --Emp_Bonus;
       v:= Get_Emp_Info(indx.employee_id);
        DBMS_OUTPUT.PUT_LINE ( RPAD (v.emp_ID, 12) ||V.fullname || '    '||V.sal ||'    '||V.deptid);
end loop;
end;
/

OUTPUT
-------------------------------------------------------------------
103         Alexander Hunold    9000    60
104         Bruce Ernst    6000    60
105         David Austin    4800    60
106         Valli Pataballa    4800    60
107         Diana Lorentz    4200    60

------------------------------------------------------------------


---Q4)
drop PACKAGE  Pkg_dept_info;
drop PACKAGE BODY Pkg_dept_info;
CREATE OR REPLACE PACKAGE Pkg_dept_info AUTHID DEFINER
IS 
    FUNCTION dpt_info 
     ( dept_id	number)
       RETURN number;
    FUNCTION dpt_info 
     ( dept_name departments.department_name %type)
       RETURN number;      
       
END Pkg_dept_info;
/
CREATE OR REPLACE PACKAGE BODY Pkg_dept_info 
is	 
   FUNCTION dpt_info 
     ( dept_id	number)
       RETURN number
      IS
       ret    number (9,2); 	
   BEGIN
     SELECT count( employees.employee_id) as NUMBER_OF_employees into ret
    FROM   departments INNER join employees on departments.department_id= employees.department_id
    WHERE  departments.department_id = dept_id
    group by departments.department_id;
    RETURN ret;
   END dpt_info  ;

   FUNCTION dpt_info 
     ( dept_name  departments.department_name%type)
       RETURN number
      IS
       ret    number (9,2); 	
   BEGIN
    SELECT count( employees.employee_id) as NUMBER_OF_employees into ret
    FROM   departments INNER join employees on departments.department_id=employees.department_id
    WHERE  departments.department_name = dept_name
    group by departments.department_id;

    RETURN ret;
   END dpt_info ; 
end Pkg_dept_info;
/
DECLARE
local_variable_al departments.department_id%type :=  Pkg_dept_info.dpt_info  ( 60) ;
local_variable_a2 departments.department_name%TYPE:=  Pkg_dept_info.dpt_info  ( 'IT'  ) ;
begin
dbms_output.put_line(NUMBER_OF_employees||' '||local_variable_al);
dbms_output.put_line(NUMBER_OF_employees||' '||local_variable_a2);
END;
/

OUTPUT
-------------------------------------------------------------------
NUMBER_OF_employees 5
NUMBER_OF_employees 5
-------------------------------------------------------------------



--Q5)
CREATE TABLE Emp_log  (
   Old_employee_ID     number (8),
   old_salary          number(9),
   new_salary          number(9),
   Updated_Date	  DATE,
   Updated_By	  Varchar2 (15),
   Action         Varchar2 (30)
);

CREATE OR REPLACE TRIGGER Emp_Change
   AFTER DELETE  or update  of salary ON employees
   FOR EACH ROW
   BEGIN
   if  UPDATING('salary') then
       INSERT INTO Emp_log VALUES
          ( :old.employee_ID, :old.salary , :new.salary , Sysdate, user, 'UPDATING  salary');
          
     ELSIF DELETING THEN
     INSERT INTO Emp_log VALUES
          ( :old.employee_ID, :old.salary , :new.salary , Sysdate, user, 'Deleted one employees ');
          
   ELSE	
	 DBMS_OUTPUT.PUT_LINE('something goes wrong');
      END IF;        
END Emp_Change ;
/

UPDATE employees set salary = salary * 1.2 WHERE employee_id = 111;
-- SELECT * from Emp_log;
-- rollback;

DELETE employees where employee_id = 111;
-- SELECT * from Emp_log;
-- rollback;


OUTPUT
-------------------------------------------------------------------
111	7700	9240	14-MAR-22	NBHALAL1	UPDATING  salary
111	7700		14-MAR-22	NBHALAL1	Deleted one employees 
----------------------------------------------------------------





